(()=>{"use strict";function e(){function e(e){return e.split(" ")}function t(e,t){t.forEach((t=>{e.classList.add(t)}))}return{getID:function(){return"_"+Math.random().toString(36).substr(2,9)},classAdder:t,splitString:e,stringToClass:function(n,s){t(n,e(s))}}}const t={events:{},subscribe:function(e,t){console.log(`PUBSUB: someone just subscribed to know about ${e}`),this.events[e]=this.events[e]||[],this.events[e].push(t)},unsubscribe:function(e,t){console.log(`PUBSUB: someone just UNsubscribed from ${e}`),this.events[e]&&(this.events[e]=this.events[e].filter((e=>e!==t)))},publish:function(e,t){console.log(`PUBSUB: Making an broadcast about ${e} with ${t}`),this.events[e]&&this.events[e].forEach((e=>{e(t)}))}};document.addEventListener("DOMContentLoaded",(n=>{console.log("pizza");let s=document.getElementById("content");const i=function(){const t=e(),n=document.createElement("nav"),s=document.createElement("div"),i=document.createElement("a");return t.stringToClass(n,"navbar navbar-expand-md navbar-dark bg-dark"),t.stringToClass(s,"container-fluid"),t.stringToClass(i,"navbar-brand"),i.innerText="Todolist",s.append(i),n.append(s),n}(),o=function(){const n=e(),s=document.createElement("div"),i=document.createElement("a"),o=document.createElement("img"),r=document.createElement("span"),a=document.createElement("hr"),c=document.createElement("ul"),l=document.createElement("form"),d=document.createElement("div"),u=document.createElement("input"),m=document.createElement("button"),p=document.createElement("div"),b=document.createElement("button");function g(e){const s=document.createElement("li"),i=document.createElement("a"),o=document.createElement("svg");return n.stringToClass(s,"nav-item m-2"),n.stringToClass(i,"nav-link active"),n.stringToClass(o,"bi me-2"),i.innerText=e,o.setAttribute("width",16),o.setAttribute("height",16),i.append(o),s.append(i),t.publish("createLi",s),s}return n.stringToClass(s,"d-flex flex-column flex-shrink-0 p-3 bg-light col-3 border"),n.stringToClass(o,"m-2"),n.stringToClass(i,"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none"),n.stringToClass(r,"fs-4"),n.stringToClass(c,"nav nav-pills flex-column mb-auto"),n.stringToClass(p,"b-example-divider d-flex justify-content-center"),n.stringToClass(b,"btn btn-primay"),n.stringToClass(l,"form-group m-2 p-1 input-group invisible"),n.stringToClass(u,"form-control"),n.stringToClass(m,"btn btn-outline-primary"),s.style="width: 280px;",r.innerText="Projects",o.style="width: 30px",b.innerText="+ New Project",d.style="width: 150px;",m.innerText="Add",o.setAttribute("src","../sandbox/public/todo.svg"),l.setAttribute("action","submit"),l.setAttribute("id","form"),l.addEventListener("submit",(e=>{e.preventDefault();let n=e.target[1].value;t.publish("liSubmit",n),l.reset()})),b.addEventListener("click",(e=>{t.publish("toogleForm","form")})),t.subscribe("toogleForm",(function(e){let t=document.getElementById(e);t.classList.contains("invisible")?t.classList.remove("invisible"):t.classList.add("invisible")})),t.subscribe("liSubmit",g),t.subscribe("createLi",(function(e){document.querySelector("ul").append(e)})),i.append(o,r),d.append(u),l.append(m),l.append(d),s.append(i),s.append(a),s.append(b),s.append(l),s.append(c),s.append(a),s.append(p),s.append(a),{divSidebar:s,createLi:g,ul:c}}().divSidebar;s.append(i);const r=document.createElement("div");r.classList.add("row"),r.append(o),s.append(r)})),console.log("amit")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,