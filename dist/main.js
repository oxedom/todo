(()=>{"use strict";function e(){function e(e){return e.split(" ")}function t(e,t){t.forEach((t=>{e.classList.add(t)}))}return{getID:function(){return"_"+Math.random().toString(36).substr(2,9)},classAdder:t,splitString:e,stringToClass:function(n,s){t(n,e(s))},getFormData:e=>{const t=new FormData(e.target);return Object.fromEntries(t)}}}const t={events:{},subscribe:function(e,t){console.log(`PUBSUB: someone just subscribed to know about ${e}`),this.events[e]=this.events[e]||[],this.events[e].push(t)},unsubscribe:function(e,t){console.log(`PUBSUB: someone just UNsubscribed from ${e}`),this.events[e]&&(this.events[e]=this.events[e].filter((e=>e!==t)))},publish:function(e,t){console.log(`PUBSUB: Making an broadcast about ${e} with ${t}`),this.events[e]&&this.events[e].forEach((e=>{e(t)}))}};function n(){const n=function(){const e=[];return{addTask:t=>{e.push(t),console.log(e)},removeTask:t=>{e=e.filter((e=>!t))}}}(),s=e(),o=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div"),i=document.createElement("div");return s.stringToClass(o,"col-8 container-sm bg-light card-body"),s.stringToClass(r,"container-md card m-2 p-1 mr-1"),s.stringToClass(a,"container row"),s.stringToClass(i,"col-1 bg-light"),a.style="gap: 10px",r.append(a),o.append(r),t.subscribe("newTask",(e=>{var t;t=function(e){const t=document.createElement("div"),n=document.createElement("p"),o=document.createElement("button"),r=document.createElement("button");return s.stringToClass(n,"m-2 col-xl"),s.stringToClass(o,"btn btn-outline-primary col-sm pl-2"),s.stringToClass(r,"btn btn-outline-danger col-sm"),t.append(n,r,o),o.innerText="DONE",r.innerText="Remove",n.innerText=e.taskName,n.style="flex-grow: 10",t.append(n,r,o),t}(e),a.append(t)})),t.subscribe("newTask",(e=>{!function(e){let s=function(e){let n=e.taskName;return(new Date).getDate(),{removeSelf:()=>{t.publish("removeTask")},getName:e=>n}}(e);n.addTask(s)}(e)})),t.subscribe("removeTask",(e=>n.removeTask)),o}document.addEventListener("DOMContentLoaded",(s=>{let o=document.getElementById("content");const r=function(){const t=e(),n=document.createElement("nav"),s=document.createElement("div"),o=document.createElement("a");return t.stringToClass(n,"navbar navbar-expand-md navbar-dark bg-dark"),t.stringToClass(s,"container-fluid"),t.stringToClass(o,"navbar-brand"),o.innerText="Todolist",s.append(o),n.append(s),n}(),a=function(){const n=e(),s=document.createElement("div"),o=document.createElement("a"),r=document.createElement("img"),a=document.createElement("span"),i=document.createElement("hr"),c=document.createElement("ul"),l=document.createElement("form"),d=document.createElement("div"),m=document.createElement("form"),u=document.createElement("div"),p=document.createElement("button"),b=document.createElement("input"),g=(document.createElement("area"),document.createElement("input")),T=document.createElement("button"),v=document.createElement("div"),f=document.createElement("button"),E=document.createElement("button"),h="form-control",C="btn btn-outline-primary";function k(e){let t=document.getElementById(e);t.classList.contains("d-none")?t.classList.remove("d-none"):t.classList.add("d-none")}function x(e){const s=document.createElement("li"),o=document.createElement("a"),r=document.createElement("svg");return n.stringToClass(s,"nav-item m-2"),n.stringToClass(o,"nav-link active"),n.stringToClass(r,"bi me-2"),o.innerText=e,r.setAttribute("width",16),r.setAttribute("height",16),o.append(r),s.append(o),t.publish("createLi",s),s}return n.stringToClass(s,"d-flex flex-column flex-shrink-0 p-3 bg-light col-3 border"),n.stringToClass(r,"m-2"),n.stringToClass(o,"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none"),n.stringToClass(a,"fs-4"),n.stringToClass(c,"nav nav-pills flex-column mb-auto"),n.stringToClass(v,"b-example-divider d-flex justify-content-center"),n.stringToClass(f,"btn btn-primay"),n.stringToClass(E,"btn btn-primay m-2"),n.stringToClass(l,"form-group m-2 p-1 input-group d-none"),n.stringToClass(m,"form-group m-2 p-1 input-group d-none"),n.stringToClass(u,"d-flex justify-content-center"),n.stringToClass(g,h),n.stringToClass(T,C),n.stringToClass(p,C),n.stringToClass(b,h),s.style="width: 280px;",a.innerText="Projects",r.style="width: 30px",f.innerText="+ New Project",E.innerText="+ Task",d.style="width: 150px;",u.style="width: 200px",T.innerText="+",p.innerText="+",g.setAttribute("placeholder","New Project"),b.setAttribute("placeholder","New Task"),r.setAttribute("src","../sandbox/public/todo.svg"),l.setAttribute("action","submit"),l.setAttribute("id","form"),m.setAttribute("action","submit"),m.setAttribute("id","formTask"),m.setAttribute("name","taskForm"),b.setAttribute("name","taskName"),g.setAttribute("name","name"),l.addEventListener("submit",(e=>{e.preventDefault();let s=n.getFormData(e);t.publish("liSubmit",s),l.reset()})),m.addEventListener("submit",(e=>{e.preventDefault();let s=n.getFormData(e);t.publish("newTask",s),console.log(s),m.reset()})),f.addEventListener("click",(e=>{t.publish("toogleForm","form")})),E.addEventListener("click",(e=>{t.publish("toogleForm","formTask")})),t.subscribe("toogleForm",k),t.subscribe("toogleTask",k),t.subscribe("liSubmit",x),t.subscribe("createLi",(function(e){document.querySelector("ul").append(e)})),o.append(r,a),d.append(g),l.append(T),l.append(d),m.append(p,b),u.append(m),s.append(o),s.append(f),s.append(E),s.append(l),s.append(u),s.append(i),s.append(c),s.append(v),{divSidebar:s,createLi:x,ul:c}}().divSidebar,i=n();o.append(r);const c=document.createElement("div");c.classList.add("row"),c.append(a),c.append(i),o.append(c)})),console.log("amit")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,