(()=>{"use strict";function e(){function e(e){return e.split(" ")}function t(e,t){t.forEach((t=>{e.classList.add(t)}))}return{getID:function(){return`_${Math.random().toString(36).substr(2,9)}`},classAdder:t,splitString:e,stringToClass:function(n,s){t(n,e(s))},getFormData:e=>{const t=new FormData(e.target);return Object.fromEntries(t)},toogleElement:function(e){const t=document.getElementById(e);t.classList.contains("d-none")?t.classList.remove("d-none"):t.classList.add("d-none")}}}const t={events:{},subscribe(e,t){console.log(`PUBSUB: someone just subscribed to know about ${e}`),this.events[e]=this.events[e]||[],this.events[e].push(t)},unsubscribe(e,t){console.log(`PUBSUB: someone just UNsubscribed from ${e}`),this.events[e]&&(this.events[e]=this.events[e].filter((e=>e!==t)))},publish(e,t){console.log(`PUBSUB: Making an broadcast about ${e} with ${t}`),this.events[e]&&this.events[e].forEach((e=>{e(t)}))}};function n(){const n=function(){let e=[];return{addTask:t=>{e.push(t),console.log(e)},removeTask:t=>{e=e.filter((e=>{}))}}}(),s=e(),o=document.createElement("div"),r=document.createElement("div"),a=document.createElement("div"),c=document.createElement("div");return s.stringToClass(o,"col-8 container-sm bg-light card-body"),s.stringToClass(r,"container-md card m-2 p-1 mr-1"),s.stringToClass(a,"container row"),s.stringToClass(c,"col-1 bg-light"),a.style="gap: 10px",r.append(a),o.append(r),t.subscribe("newTask",(e=>{var n;n=function(e){const n=document.createElement("div"),o=document.createElement("p"),r=document.createElement("button"),a=document.createElement("button"),c=document.createElement("hr");return s.stringToClass(o,"m-2 col-xl"),s.stringToClass(r,"btn btn-outline-primary col-sm pl-2"),s.stringToClass(a,"btn btn-outline-danger col-sm"),n.append(o,a,r),r.innerText="DONE",a.innerText="Remove",o.innerText=e.taskName,o.style="flex-grow: 10",n.append(o,a,r,c),r.addEventListener("click",t.publish("handleDone")),a.addEventListener("click",t.publish("handleRemove")),n}(e),a.append(n)})),t.subscribe("newTask",(e=>{!function(e){const s=function(e){const n=e.taskName;return(new Date).getDate(),{removeSelf:()=>{t.publish("removeTask")},getName:()=>n}}(e);n.addTask(s)}(e)})),t.subscribe("removeTask",(e=>n.removeTask)),o}document.addEventListener("DOMContentLoaded",(s=>{const o=document.getElementById("content"),r=function(){const t=e(),n=document.createElement("nav"),s=document.createElement("div"),o=document.createElement("a");return t.stringToClass(n,"navbar navbar-expand-md navbar-dark bg-dark"),t.stringToClass(s,"container-fluid"),t.stringToClass(o,"navbar-brand"),o.innerText="Todolist",s.append(o),n.append(s),n}(),a=function(){const n=e(),s=document.createElement("div"),o=document.createElement("a"),r=document.createElement("img"),a=document.createElement("span"),c=document.createElement("hr"),i=document.createElement("ul"),l=document.createElement("form"),d=document.createElement("div"),u=document.createElement("form"),m=document.createElement("div"),p=document.createElement("button"),b=document.createElement("input"),g=(document.createElement("area"),document.createElement("input")),E=document.createElement("button"),T=document.createElement("div"),v=document.createElement("button"),f=document.createElement("button"),h="form-control",k="btn btn-outline-primary";n.stringToClass(s,"d-flex flex-column flex-shrink-0 p-3 bg-light col-3 border"),n.stringToClass(r,"m-2"),n.stringToClass(o,"d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none"),n.stringToClass(a,"fs-4"),n.stringToClass(i,"nav nav-pills flex-column mb-auto"),n.stringToClass(T,"b-example-divider d-flex justify-content-center"),n.stringToClass(v,"btn btn-primay"),n.stringToClass(f,"btn btn-primay m-2"),n.stringToClass(l,"form-group m-2 p-1 input-group d-none"),n.stringToClass(u,"form-group m-2 p-1 input-group d-none"),n.stringToClass(m,"d-flex justify-content-center"),n.stringToClass(g,h),n.stringToClass(E,k),n.stringToClass(p,k),n.stringToClass(b,h),s.style="width: 280px;",a.innerText="Projects",r.style="width: 30px",v.innerText="+ New Project",f.innerText="+ Task",d.style="width: 150px;",m.style="width: 200px",E.innerText="+",p.innerText="+",g.setAttribute("placeholder","New Project"),b.setAttribute("placeholder","New Task"),i.setAttribute("id","projectUl"),r.setAttribute("src","../sandbox/public/todo.svg"),l.setAttribute("action","submit"),l.setAttribute("id","formProject"),u.setAttribute("action","submit"),u.setAttribute("id","formTask"),u.setAttribute("name","taskForm"),b.setAttribute("name","taskName"),g.setAttribute("name","name");const C=function(){const e=[];return{addProject:t=>{e.push(t),console.log(e)},getLength:()=>e.length}}();return l.addEventListener("submit",(e=>{e.preventDefault();const s=n.getFormData(e);t.publish("liSubmit",s.name),t.publish("newProject",s),l.reset()})),t.subscribe("newProject",(function(e){const t={name:e.name,dateCreated:(new Date).getDate()};C.addProject(t)})),u.addEventListener("submit",(e=>{e.preventDefault();const s=n.getFormData(e),o=document.querySelectorAll('[selected="true"]');0===o.length?alert("Need to Select Project"):(console.log("weeee wewwe"),console.log(o),s.project=o[0].innerText,s.id=n.getID(),console.log(s),C.getLength()>=1?(t.publish("newTask",s),u.reset()):alert("NEED ATLEAST ONE PROJECT"))})),v.addEventListener("click",(e=>{t.publish("toogleForm","formProject")})),f.addEventListener("click",(e=>{t.publish("toogleTask","formTask")})),t.subscribe("toogleForm",n.toogleElement),t.subscribe("toogleTask",n.toogleElement),t.subscribe("liSubmit",(function(e){const s=document.createElement("li"),o=document.createElement("a");return n.stringToClass(s,"nav-item m-2"),n.stringToClass(o,"nav-link active"),o.innerText=e,s.append(o),t.publish("createLi",s),s.addEventListener("click",(e=>{t.publish("projectClicked",e.target)})),s})),t.subscribe("projectClicked",(function(e){const t=document.getElementById("projectUl").childNodes;for(let e=0;e<t.length;e++)t[e].classList.remove("bg-success"),t[e].childNodes.forEach((e=>{e.classList.remove("bg-success")}));e.classList.add("bg-success")})),t.subscribe("projectClicked",(function(e){const t=document.getElementById("projectUl").childNodes;for(let n=0;n<t.length;n++)t[n].removeAttribute("selected"),t[n].childNodes.forEach((e=>{e.removeAttribute("selected")})),e.setAttribute("selected","true")})),t.subscribe("createLi",(function(e){document.querySelector("ul").append(e)})),o.append(r,a),d.append(g),l.append(E),l.append(d),u.append(p,b),m.append(u),s.append(o),s.append(v),s.append(f),s.append(l),s.append(m),s.append(c),s.append(i),s.append(T),{divSidebar:s}}().divSidebar,c=n();o.append(r);const i=document.createElement("div");i.classList.add("row"),i.append(a),i.append(c),o.append(i)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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d2VicGFjazovL3RvZG8vLi9zcmMvanMvcHVic3ViLmpzIiwid2VicGFjazovL3RvZG8vLi9zcmMvanMvdGFza3MuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9qcy9kb20uanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9qcy9uYXZiYXIuanMiLCJ3ZWJwYWNrOi8vdG9kby8uL3NyYy9qcy9zaWRlYmFyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBsaWJzKCkge1xuICAgIGNvbnN0IGdldEZvcm1EYXRhID0gKGV2ZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGV2ZW50LnRhcmdldCk7XG4gICAgICAgIGNvbnN0IGZvcm1Qcm9wcyA9IE9iamVjdC5mcm9tRW50cmllcyhmb3JtRGF0YSk7XG4gICAgICAgIHJldHVybiBmb3JtUHJvcHM7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHNwbGl0U3RyaW5nKHN0cmluZykge1xuICAgICAgICByZXR1cm4gc3RyaW5nLnNwbGl0KFwiIFwiKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbGFzc0FkZGVyKGVsZW1lbnQsIGFycmF5KSB7XG4gICAgICAgIGFycmF5LmZvckVhY2goKHN0cmluZykgPT4ge1xuICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKHN0cmluZyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN0cmluZ1RvQ2xhc3MoZWxlbWVudCwgc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGFyciA9IHNwbGl0U3RyaW5nKHN0cmluZyk7XG4gICAgICAgIGNsYXNzQWRkZXIoZWxlbWVudCwgYXJyKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRJRCgpIHtcbiAgICAgICAgcmV0dXJuIGBfJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b29nbGVFbGVtZW50KGlkKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChpZCk7XG4gICAgICAgIGlmIChlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhcImQtbm9uZVwiKSkge1xuICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiZC1ub25lXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiZC1ub25lXCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0SUQsXG4gICAgICAgIGNsYXNzQWRkZXIsXG4gICAgICAgIHNwbGl0U3RyaW5nLFxuICAgICAgICBzdHJpbmdUb0NsYXNzLFxuICAgICAgICBnZXRGb3JtRGF0YSxcbiAgICAgICAgdG9vZ2xlRWxlbWVudCxcbiAgICB9O1xufVxuIiwiZXhwb3J0IGNvbnN0IHB1YnN1YiA9IHtcbiAgICBldmVudHM6IHt9LFxuICAgIHN1YnNjcmliZShldk5hbWUsIGZuKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBQVUJTVUI6IHNvbWVvbmUganVzdCBzdWJzY3JpYmVkIHRvIGtub3cgYWJvdXQgJHtldk5hbWV9YCk7XG4gICAgICAgIC8vIGFkZCBhbiBldmVudCB3aXRoIGEgbmFtZSBhcyBuZXcgb3IgdG8gZXhpc3RpbmcgbGlzdFxuICAgICAgICB0aGlzLmV2ZW50c1tldk5hbWVdID0gdGhpcy5ldmVudHNbZXZOYW1lXSB8fCBbXTtcbiAgICAgICAgdGhpcy5ldmVudHNbZXZOYW1lXS5wdXNoKGZuKTtcbiAgICB9LFxuICAgIHVuc3Vic2NyaWJlKGV2TmFtZSwgZm4pIHtcbiAgICAgICAgY29uc29sZS5sb2coYFBVQlNVQjogc29tZW9uZSBqdXN0IFVOc3Vic2NyaWJlZCBmcm9tICR7ZXZOYW1lfWApO1xuICAgICAgICAvLyByZW1vdmUgYW4gZXZlbnQgZnVuY3Rpb24gYnkgbmFtZVxuICAgICAgICBpZiAodGhpcy5ldmVudHNbZXZOYW1lXSkge1xuICAgICAgICAgICAgdGhpcy5ldmVudHNbZXZOYW1lXSA9IHRoaXMuZXZlbnRzW2V2TmFtZV0uZmlsdGVyKChmKSA9PiBmICE9PSBmbik7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIHB1Ymxpc2goZXZOYW1lLCBkYXRhKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBQVUJTVUI6IE1ha2luZyBhbiBicm9hZGNhc3QgYWJvdXQgJHtldk5hbWV9IHdpdGggJHtkYXRhfWApO1xuICAgICAgICAvLyBlbWl0fHB1Ymxpc2h8YW5ub3VuY2UgdGhlIGV2ZW50IHRvIGFueW9uZSB3aG8gaXMgc3Vic2NyaWJlZFxuICAgICAgICBpZiAodGhpcy5ldmVudHNbZXZOYW1lXSkge1xuICAgICAgICAgICAgdGhpcy5ldmVudHNbZXZOYW1lXS5mb3JFYWNoKChmKSA9PiB7XG4gICAgICAgICAgICAgICAgZihkYXRhKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSxcbn07XG4iLCJpbXBvcnQgeyBsaWJzIH0gZnJvbSBcIi4vbGlic1wiO1xuaW1wb3J0IHsgcHVic3ViIH0gZnJvbSBcIi4vcHVic3ViLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRhc2tzKCkge1xuICAgIGNvbnN0IFRhc2sgPSBmdW5jdGlvbiAodGFza09iaikge1xuICAgICAgICBjb25zdCBfdGFza05hbWUgPSB0YXNrT2JqLnRhc2tOYW1lO1xuICAgICAgICBjb25zdCBkYXRlQ3JlYXRlZCA9IG5ldyBEYXRlKCkuZ2V0RGF0ZSgpO1xuXG4gICAgICAgIGNvbnN0IHJlbW92ZVNlbGYgPSAoKSA9PiB7XG4gICAgICAgICAgICBwdWJzdWIucHVibGlzaChcInJlbW92ZVRhc2tcIik7XG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgZ2V0TmFtZSA9ICgpID0+IF90YXNrTmFtZTtcblxuICAgICAgICByZXR1cm4geyByZW1vdmVTZWxmLCBnZXROYW1lIH07XG4gICAgfTtcblxuICAgIGNvbnN0IHRhc2tMb2dpYyA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxldCBfdGFza3MgPSBbXTtcblxuICAgICAgICBjb25zdCBhZGRUYXNrID0gKHRhc2spID0+IHtcbiAgICAgICAgICAgIF90YXNrcy5wdXNoKHRhc2spO1xuICAgICAgICAgICAgY29uc29sZS5sb2coX3Rhc2tzKTtcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCByZW1vdmVUYXNrID0gKHRhcmdldFRhc2spID0+IHtcbiAgICAgICAgICAgIF90YXNrcyA9IF90YXNrcy5maWx0ZXIoKHQpID0+IHtcbiAgICAgICAgICAgICAgICB0ID0gIXRhcmdldFRhc2s7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4geyBhZGRUYXNrLCByZW1vdmVUYXNrIH07XG4gICAgfSkoKTtcblxuICAgIGNvbnN0IGxpYnNIZWxwZXIgPSBsaWJzKCk7XG5cbiAgICBjb25zdCBkaXZCb2R5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBjb25zdCBkaXZDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNvbnN0IGRpdlJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgICBjb25zdCBkaXZHYXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gICAgY29uc3QgZGl2Qm9keUNsYXNzID0gXCJjb2wtOCBjb250YWluZXItc20gYmctbGlnaHQgY2FyZC1ib2R5XCI7XG4gICAgY29uc3QgZGl2Q29udGFpbmVyQ2xhc3MgPSBcImNvbnRhaW5lci1tZCBjYXJkIG0tMiBwLTEgbXItMVwiO1xuICAgIGNvbnN0IGRpdlJvd0NsYXNzID0gXCJjb250YWluZXIgcm93XCI7XG5cbiAgICBjb25zdCBkaXZHYXBDbGFzcyA9IFwiY29sLTEgYmctbGlnaHRcIjtcblxuICAgIGxpYnNIZWxwZXIuc3RyaW5nVG9DbGFzcyhkaXZCb2R5LCBkaXZCb2R5Q2xhc3MpO1xuICAgIGxpYnNIZWxwZXIuc3RyaW5nVG9DbGFzcyhkaXZDb250YWluZXIsIGRpdkNvbnRhaW5lckNsYXNzKTtcbiAgICBsaWJzSGVscGVyLnN0cmluZ1RvQ2xhc3MoZGl2Um93LCBkaXZSb3dDbGFzcyk7XG5cbiAgICBsaWJzSGVscGVyLnN0cmluZ1RvQ2xhc3MoZGl2R2FwLCBkaXZHYXBDbGFzcyk7XG5cbiAgICBkaXZSb3cuc3R5bGUgPSBcImdhcDogMTBweFwiO1xuXG4gICAgZGl2Q29udGFpbmVyLmFwcGVuZChkaXZSb3cpO1xuICAgIGRpdkJvZHkuYXBwZW5kKGRpdkNvbnRhaW5lcik7XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVUYXNrTWVtb3J5KHRhc2tPYmopIHtcbiAgICAgICAgY29uc3QgbmV3VGFzayA9IFRhc2sodGFza09iaik7XG4gICAgICAgIHRhc2tMb2dpYy5hZGRUYXNrKG5ld1Rhc2spO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZVRhc2tEb20odGFza09iaikge1xuICAgICAgICBjb25zdCB0YXNrQ29tcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGNvbnN0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICAgICAgY29uc3QgYnRuRG9uZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGNvbnN0IGJ0blJlbW92ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgICAgIGNvbnN0IGhyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImhyXCIpO1xuXG4gICAgICAgIGNvbnN0IHBDbGFzcyA9IFwibS0yIGNvbC14bFwiO1xuICAgICAgICBjb25zdCBidG5Eb25lQ2xhc3MgPSBcImJ0biBidG4tb3V0bGluZS1wcmltYXJ5IGNvbC1zbSBwbC0yXCI7XG4gICAgICAgIGNvbnN0IGJ0blJlbW92ZUNsYXNzID0gXCJidG4gYnRuLW91dGxpbmUtZGFuZ2VyIGNvbC1zbVwiO1xuICAgICAgICBsaWJzSGVscGVyLnN0cmluZ1RvQ2xhc3MocCwgcENsYXNzKTtcbiAgICAgICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKGJ0bkRvbmUsIGJ0bkRvbmVDbGFzcyk7XG4gICAgICAgIGxpYnNIZWxwZXIuc3RyaW5nVG9DbGFzcyhidG5SZW1vdmUsIGJ0blJlbW92ZUNsYXNzKTtcbiAgICAgICAgdGFza0NvbXAuYXBwZW5kKHAsIGJ0blJlbW92ZSwgYnRuRG9uZSk7XG4gICAgICAgIGJ0bkRvbmUuaW5uZXJUZXh0ID0gXCJET05FXCI7XG4gICAgICAgIGJ0blJlbW92ZS5pbm5lclRleHQgPSBcIlJlbW92ZVwiO1xuXG4gICAgICAgIHAuaW5uZXJUZXh0ID0gdGFza09iai50YXNrTmFtZTtcbiAgICAgICAgcC5zdHlsZSA9IFwiZmxleC1ncm93OiAxMFwiO1xuICAgICAgICB0YXNrQ29tcC5hcHBlbmQocCwgYnRuUmVtb3ZlLCBidG5Eb25lLCBocik7XG5cbiAgICAgICAgYnRuRG9uZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgcHVic3ViLnB1Ymxpc2goXCJoYW5kbGVEb25lXCIpKTtcbiAgICAgICAgYnRuUmVtb3ZlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBwdWJzdWIucHVibGlzaChcImhhbmRsZVJlbW92ZVwiKSk7XG5cbiAgICAgICAgcmV0dXJuIHRhc2tDb21wO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFwcGVuZFRhc2sodGFzaykge1xuICAgICAgICBkaXZSb3cuYXBwZW5kKHRhc2spO1xuICAgIH1cblxuICAgIHB1YnN1Yi5zdWJzY3JpYmUoXCJuZXdUYXNrXCIsIChkYXRhKSA9PiB7XG4gICAgICAgIGNvbnN0IG5ld1Rhc2sgPSBjcmVhdGVUYXNrRG9tKGRhdGEpO1xuICAgICAgICBhcHBlbmRUYXNrKG5ld1Rhc2spO1xuICAgIH0pO1xuXG4gICAgcHVic3ViLnN1YnNjcmliZShcIm5ld1Rhc2tcIiwgKGRhdGEpID0+IHtcbiAgICAgICAgY3JlYXRlVGFza01lbW9yeShkYXRhKTtcbiAgICB9KTtcbiAgICBwdWJzdWIuc3Vic2NyaWJlKFwicmVtb3ZlVGFza1wiLCAodGFzaykgPT4gdGFza0xvZ2ljLnJlbW92ZVRhc2spO1xuXG4gICAgcmV0dXJuIGRpdkJvZHk7XG59XG4iLCJpbXBvcnQgeyBhZGQgfSBmcm9tIFwiZGF0ZS1mbnNcIjtcbmltcG9ydCBuYXZiYXIgZnJvbSBcIi4vbmF2YmFyXCI7XG5pbXBvcnQgc2lkZWJhciBmcm9tIFwiLi9zaWRlYmFyXCI7XG5pbXBvcnQgdGFza3MgZnJvbSBcIi4vdGFza3NcIjtcblxuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBIb29rIGZvciBmb3IgY29udGVudFxuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgKGUpID0+IHtcbiAgICAgICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGVudFwiKTtcbiAgICAgICAgY29uc3QgX25hdiA9IG5hdmJhcigpO1xuICAgICAgICBjb25zdCBfc2lkZWJhciA9IHNpZGViYXIoKS5kaXZTaWRlYmFyO1xuICAgICAgICBjb25zdCBfdGFza3MgPSB0YXNrcygpO1xuXG4gICAgICAgIGNvbnRlbnQuYXBwZW5kKF9uYXYpO1xuICAgICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBkaXYuY2xhc3NMaXN0LmFkZChcInJvd1wiKTtcbiAgICAgICAgZGl2LmFwcGVuZChfc2lkZWJhcik7XG4gICAgICAgIGRpdi5hcHBlbmQoX3Rhc2tzKTtcbiAgICAgICAgY29udGVudC5hcHBlbmQoZGl2KTtcbiAgICB9KTtcbn0pKCk7XG4iLCJpbXBvcnQgeyBsaWJzIH0gZnJvbSBcIi4vbGlic1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuYXYoKSB7XG4gICAgLy8gSU5JVCBMSUJTXG4gICAgY29uc3QgbGlic0hlbHBlciA9IGxpYnMoKTtcblxuICAgIC8vIENSRUFURSBFTEVNRU5UU1xuICAgIGNvbnN0IG5hdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJuYXZcIik7XG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBjb25zdCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XG5cbiAgICAvLyBDTEFTUyBTVFJJTkcgRlJPTSBIVE1MIEJPSUxFUiBQTEFURVxuICAgIGNvbnN0IG5hdkNsYXNzID0gXCJuYXZiYXIgbmF2YmFyLWV4cGFuZC1tZCBuYXZiYXItZGFyayBiZy1kYXJrXCI7XG4gICAgY29uc3QgZGl2Q2xhc3MgPSBcImNvbnRhaW5lci1mbHVpZFwiO1xuICAgIGNvbnN0IGFDbGFzcyA9IFwibmF2YmFyLWJyYW5kXCI7XG5cbiAgICBsaWJzSGVscGVyLnN0cmluZ1RvQ2xhc3MobmF2LCBuYXZDbGFzcyk7XG4gICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKGRpdiwgZGl2Q2xhc3MpO1xuICAgIGxpYnNIZWxwZXIuc3RyaW5nVG9DbGFzcyhhLCBhQ2xhc3MpO1xuXG4gICAgLy8gQWRkIFRleHQgQ29udGVudFxuICAgIGEuaW5uZXJUZXh0ID0gXCJUb2RvbGlzdFwiO1xuXG4gICAgZGl2LmFwcGVuZChhKTtcbiAgICBuYXYuYXBwZW5kKGRpdik7XG5cbiAgICByZXR1cm4gbmF2O1xufVxuIiwiaW1wb3J0IHsgaXQsIHRhIH0gZnJvbSBcImRhdGUtZm5zL2xvY2FsZVwiO1xuaW1wb3J0IHsgbGlicyB9IGZyb20gXCIuL2xpYnNcIjtcbmltcG9ydCB7IHB1YnN1YiB9IGZyb20gXCIuL3B1YnN1Yi5qc1wiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2lkZWJhcigpIHtcbiAgICAvLyBJTklUIExJQlNcbiAgICBjb25zdCBsaWJzSGVscGVyID0gbGlicygpO1xuXG4gICAgLy8gQ1JFQVRFIEVMRU1FTlRTXG4gICAgY29uc3QgZGl2U2lkZWJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuICAgIGNvbnN0IGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbWdcIik7XG4gICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgIGNvbnN0IGhyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImhyXCIpO1xuICAgIGNvbnN0IHVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xuXG4gICAgY29uc3QgZm9ybVByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9ybVwiKTtcbiAgICBjb25zdCBmb3JtRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICAgIGNvbnN0IGZvcm1UYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZvcm1cIik7XG4gICAgY29uc3QgZm9ybVRhc2tEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNvbnN0IHRhc2tTdWJtaXRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGNvbnN0IHRhc2tJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBjb25zdCB0YXNrVGV4dEFyZWEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYXJlYVwiKTtcblxuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGNvbnN0IHN1Ym1pdEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgLy8gRGl2ZGVyXG4gICAgY29uc3QgZGl2RGl2ZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNvbnN0IGJ0blByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGNvbnN0IGJ0blRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuXG4gICAgLy8gQ0xBU1MgU1RSSU5HIEZST00gSFRNTCBCT0lMRVIgUExBVEVcbiAgICBjb25zdCBkaXZTaWRlYmFyQ2xhc3MgPVxuICAgICAgICBcImQtZmxleCBmbGV4LWNvbHVtbiBmbGV4LXNocmluay0wIHAtMyBiZy1saWdodCBjb2wtMyBib3JkZXJcIjtcbiAgICBjb25zdCBhQ2xhc3MgPVxuICAgICAgICBcImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgbWItMyBtYi1tZC0wIG1lLW1kLWF1dG8gbGluay1kYXJrIHRleHQtZGVjb3JhdGlvbi1ub25lXCI7XG4gICAgY29uc3QgaW1nQ2xhc3MgPSBcIm0tMlwiO1xuICAgIGNvbnN0IHNwYW5DbGFzcyA9IFwiZnMtNFwiO1xuICAgIC8vIGNvbnN0IGhyQ2xhc3MgPSAnJ1xuICAgIGNvbnN0IHVsQ2xhc3MgPSBcIm5hdiBuYXYtcGlsbHMgZmxleC1jb2x1bW4gbWItYXV0b1wiO1xuICAgIGNvbnN0IGRpdkRpdmRlQ2xhc3MgPSBcImItZXhhbXBsZS1kaXZpZGVyIGQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyXCI7XG4gICAgY29uc3QgYnRuUHJvamVjdENsYXNzID0gXCJidG4gYnRuLXByaW1heVwiO1xuICAgIGNvbnN0IGJ0blRhc2tDbGFzcyA9IFwiYnRuIGJ0bi1wcmltYXkgbS0yXCI7XG4gICAgY29uc3QgZm9ybVByb2plY3RDbGFzcyA9IFwiZm9ybS1ncm91cCBtLTIgcC0xIGlucHV0LWdyb3VwIGQtbm9uZVwiO1xuICAgIGNvbnN0IGlucHV0Q2xhc3MgPSBcImZvcm0tY29udHJvbFwiO1xuICAgIGNvbnN0IHN1Ym1pdEJ0bkNsYXNzID0gXCJidG4gYnRuLW91dGxpbmUtcHJpbWFyeVwiO1xuICAgIGNvbnN0IGZvcm1UYXNrQ2xhc3MgPSBcImZvcm0tZ3JvdXAgbS0yIHAtMSBpbnB1dC1ncm91cCBkLW5vbmVcIjtcbiAgICBjb25zdCBmb3JtVGFza0RpdkNsYXNzID0gXCJkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlclwiO1xuICAgIC8vIENMQVNTSU5HIEVMRU1FTlRTXG5cbiAgICBsaWJzSGVscGVyLnN0cmluZ1RvQ2xhc3MoZGl2U2lkZWJhciwgZGl2U2lkZWJhckNsYXNzKTtcbiAgICBsaWJzSGVscGVyLnN0cmluZ1RvQ2xhc3MoaW1nLCBpbWdDbGFzcyk7XG4gICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKGEsIGFDbGFzcyk7XG4gICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKHNwYW4sIHNwYW5DbGFzcyk7XG4gICAgLy8gbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKGhyLCBockNsYXNzKVxuICAgIGxpYnNIZWxwZXIuc3RyaW5nVG9DbGFzcyh1bCwgdWxDbGFzcyk7XG4gICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKGRpdkRpdmRlLCBkaXZEaXZkZUNsYXNzKTtcbiAgICBsaWJzSGVscGVyLnN0cmluZ1RvQ2xhc3MoYnRuUHJvamVjdCwgYnRuUHJvamVjdENsYXNzKTtcbiAgICBsaWJzSGVscGVyLnN0cmluZ1RvQ2xhc3MoYnRuVGFzaywgYnRuVGFza0NsYXNzKTtcbiAgICBsaWJzSGVscGVyLnN0cmluZ1RvQ2xhc3MoZm9ybVByb2plY3QsIGZvcm1Qcm9qZWN0Q2xhc3MpO1xuICAgIGxpYnNIZWxwZXIuc3RyaW5nVG9DbGFzcyhmb3JtVGFzaywgZm9ybVRhc2tDbGFzcyk7XG4gICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKGZvcm1UYXNrRGl2LCBmb3JtVGFza0RpdkNsYXNzKTtcblxuICAgIGxpYnNIZWxwZXIuc3RyaW5nVG9DbGFzcyhpbnB1dCwgaW5wdXRDbGFzcyk7XG4gICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKHN1Ym1pdEJ0biwgc3VibWl0QnRuQ2xhc3MpO1xuICAgIGxpYnNIZWxwZXIuc3RyaW5nVG9DbGFzcyh0YXNrU3VibWl0QnRuLCBzdWJtaXRCdG5DbGFzcyk7XG4gICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKHRhc2tJbnB1dCwgaW5wdXRDbGFzcyk7XG5cbiAgICAvLyBTRVRUSU5HUyBQUk9QU1xuICAgIGRpdlNpZGViYXIuc3R5bGUgPSBcIndpZHRoOiAyODBweDtcIjtcbiAgICBzcGFuLmlubmVyVGV4dCA9IFwiUHJvamVjdHNcIjtcbiAgICBpbWcuc3R5bGUgPSBcIndpZHRoOiAzMHB4XCI7XG4gICAgYnRuUHJvamVjdC5pbm5lclRleHQgPSBcIisgTmV3IFByb2plY3RcIjtcbiAgICBidG5UYXNrLmlubmVyVGV4dCA9IFwiKyBUYXNrXCI7XG4gICAgZm9ybURpdi5zdHlsZSA9IFwid2lkdGg6IDE1MHB4O1wiO1xuICAgIGZvcm1UYXNrRGl2LnN0eWxlID0gXCJ3aWR0aDogMjAwcHhcIjtcbiAgICBzdWJtaXRCdG4uaW5uZXJUZXh0ID0gXCIrXCI7XG4gICAgdGFza1N1Ym1pdEJ0bi5pbm5lclRleHQgPSBcIitcIjtcblxuICAgIC8vIFNFVFRJTkcgQVRUU1xuICAgIGlucHV0LnNldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIsIFwiTmV3IFByb2plY3RcIik7XG4gICAgdGFza0lucHV0LnNldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIsIFwiTmV3IFRhc2tcIik7XG4gICAgdWwuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJwcm9qZWN0VWxcIik7XG4gICAgaW1nLnNldEF0dHJpYnV0ZShcInNyY1wiLCBcIi4uL3NhbmRib3gvcHVibGljL3RvZG8uc3ZnXCIpO1xuICAgIGZvcm1Qcm9qZWN0LnNldEF0dHJpYnV0ZShcImFjdGlvblwiLCBcInN1Ym1pdFwiKTtcbiAgICBmb3JtUHJvamVjdC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImZvcm1Qcm9qZWN0XCIpO1xuICAgIGZvcm1UYXNrLnNldEF0dHJpYnV0ZShcImFjdGlvblwiLCBcInN1Ym1pdFwiKTtcbiAgICBmb3JtVGFzay5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImZvcm1UYXNrXCIpO1xuICAgIGZvcm1UYXNrLnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJ0YXNrRm9ybVwiKTtcbiAgICB0YXNrSW5wdXQuc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcInRhc2tOYW1lXCIpO1xuICAgIGlucHV0LnNldEF0dHJpYnV0ZShcIm5hbWVcIiwgXCJuYW1lXCIpO1xuXG4gICAgY29uc3Qgc2lkZWJhck1lbW9yeSA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnN0IHByb2plY3RzID0gW107XG5cbiAgICAgICAgY29uc3QgYWRkUHJvamVjdCA9IChwKSA9PiB7XG4gICAgICAgICAgICBwcm9qZWN0cy5wdXNoKHApO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocHJvamVjdHMpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IGdldExlbmd0aCA9ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBwcm9qZWN0cy5sZW5ndGg7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIHsgYWRkUHJvamVjdCwgZ2V0TGVuZ3RoIH07XG4gICAgfSkoKTtcblxuICAgIGNvbnN0IFByb2plY3QgPSBmdW5jdGlvbiAocHJvamVjdE5hbWUpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IHByb2plY3ROYW1lLm5hbWU7XG4gICAgICAgIGNvbnN0IGRhdGVDcmVhdGVkID0gbmV3IERhdGUoKS5nZXREYXRlKCk7XG5cbiAgICAgICAgcmV0dXJuIHsgbmFtZSwgZGF0ZUNyZWF0ZWQgfTtcbiAgICB9O1xuXG4gICAgLy8gRVZFTlQgTElTVE5FUlNcblxuICAgIGZvcm1Qcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjb25zdCBkYXRhID0gbGlic0hlbHBlci5nZXRGb3JtRGF0YShlKTtcbiAgICAgICAgcHVic3ViLnB1Ymxpc2goXCJsaVN1Ym1pdFwiLCBkYXRhLm5hbWUpO1xuICAgICAgICBwdWJzdWIucHVibGlzaChcIm5ld1Byb2plY3RcIiwgZGF0YSk7XG4gICAgICAgIGZvcm1Qcm9qZWN0LnJlc2V0KCk7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVOZXdQcm9qZWN0KGRhdGEpIHtcbiAgICAgICAgY29uc3QgbmV3UCA9IFByb2plY3QoZGF0YSk7XG4gICAgICAgIHNpZGViYXJNZW1vcnkuYWRkUHJvamVjdChuZXdQKTtcbiAgICB9XG5cbiAgICBwdWJzdWIuc3Vic2NyaWJlKFwibmV3UHJvamVjdFwiLCBoYW5kbGVOZXdQcm9qZWN0KTtcblxuICAgIGZvcm1UYXNrLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBjb25zdCBkYXRhID0gbGlic0hlbHBlci5nZXRGb3JtRGF0YShlKTtcblxuICAgICAgICBjb25zdCBwcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW3NlbGVjdGVkPVwidHJ1ZVwiXScpO1xuICAgICAgICBpZiAocHJvamVjdC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGFsZXJ0KFwiTmVlZCB0byBTZWxlY3QgUHJvamVjdFwiKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwid2VlZWUgd2V3d2VcIik7XG5cbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHByb2plY3QpO1xuICAgICAgICAgICAgZGF0YS5wcm9qZWN0ID0gcHJvamVjdFswXS5pbm5lclRleHQ7XG4gICAgICAgICAgICBkYXRhLmlkID0gbGlic0hlbHBlci5nZXRJRCgpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YSk7XG5cbiAgICAgICAgICAgIGlmIChzaWRlYmFyTWVtb3J5LmdldExlbmd0aCgpID49IDEpIHtcbiAgICAgICAgICAgICAgICBwdWJzdWIucHVibGlzaChcIm5ld1Rhc2tcIiwgZGF0YSk7XG4gICAgICAgICAgICAgICAgZm9ybVRhc2sucmVzZXQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYWxlcnQoXCJORUVEIEFUTEVBU1QgT05FIFBST0pFQ1RcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIGJ0blByb2plY3QuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICAgIHB1YnN1Yi5wdWJsaXNoKFwidG9vZ2xlRm9ybVwiLCBcImZvcm1Qcm9qZWN0XCIpO1xuICAgIH0pO1xuXG4gICAgYnRuVGFzay5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICAgICAgcHVic3ViLnB1Ymxpc2goXCJ0b29nbGVUYXNrXCIsIFwiZm9ybVRhc2tcIik7XG4gICAgfSk7XG5cbiAgICBwdWJzdWIuc3Vic2NyaWJlKFwidG9vZ2xlRm9ybVwiLCBsaWJzSGVscGVyLnRvb2dsZUVsZW1lbnQpO1xuICAgIHB1YnN1Yi5zdWJzY3JpYmUoXCJ0b29nbGVUYXNrXCIsIGxpYnNIZWxwZXIudG9vZ2xlRWxlbWVudCk7XG5cbiAgICBwdWJzdWIuc3Vic2NyaWJlKFwibGlTdWJtaXRcIiwgY3JlYXRlTGkpO1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlTGkodGV4dCkge1xuICAgICAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICAgICAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xuXG4gICAgICAgIGNvbnN0IGxpQ2xhc3MgPSBcIm5hdi1pdGVtIG0tMlwiO1xuICAgICAgICBjb25zdCBhQ0xhc3MgPSBcIm5hdi1saW5rIGFjdGl2ZVwiO1xuXG4gICAgICAgIC8vIGNsYXNzZXNcbiAgICAgICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKGxpLCBsaUNsYXNzKTtcbiAgICAgICAgbGlic0hlbHBlci5zdHJpbmdUb0NsYXNzKGEsIGFDTGFzcyk7XG5cbiAgICAgICAgLy8gYSBsaW5rIFByb3BzXG4gICAgICAgIGEuaW5uZXJUZXh0ID0gdGV4dDtcblxuICAgICAgICBsaS5hcHBlbmQoYSk7XG5cbiAgICAgICAgcHVic3ViLnB1Ymxpc2goXCJjcmVhdGVMaVwiLCBsaSk7XG4gICAgICAgIGxpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgICAgICAgcHVic3ViLnB1Ymxpc2goXCJwcm9qZWN0Q2xpY2tlZFwiLCBlLnRhcmdldCk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbGk7XG4gICAgfVxuXG4gICAgcHVic3ViLnN1YnNjcmliZShcInByb2plY3RDbGlja2VkXCIsIGNoYW5nZUJ0bkNvbG9yKTtcblxuICAgIHB1YnN1Yi5zdWJzY3JpYmUoXCJwcm9qZWN0Q2xpY2tlZFwiLCBzZXRTZWxlY3RlZExpKTtcblxuICAgIGZ1bmN0aW9uIHNldFNlbGVjdGVkTGkodGFyZ2V0KSB7XG4gICAgICAgIGNvbnN0IGxpTGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdFVsXCIpLmNoaWxkTm9kZXM7XG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBsaUxpc3QubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICBsaUxpc3RbaW5kZXhdLnJlbW92ZUF0dHJpYnV0ZShcInNlbGVjdGVkXCIpO1xuICAgICAgICAgICAgbGlMaXN0W2luZGV4XS5jaGlsZE5vZGVzLmZvckVhY2goKGNoaWxkKSA9PiB7XG4gICAgICAgICAgICAgICAgY2hpbGQucmVtb3ZlQXR0cmlidXRlKFwic2VsZWN0ZWRcIik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRhcmdldC5zZXRBdHRyaWJ1dGUoXCJzZWxlY3RlZFwiLCBcInRydWVcIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjaGFuZ2VCdG5Db2xvcih0YXJnZXQpIHtcbiAgICAgICAgY29uc3QgbGlMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0VWxcIikuY2hpbGROb2RlcztcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGxpTGlzdC5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgICAgIGxpTGlzdFtpbmRleF0uY2xhc3NMaXN0LnJlbW92ZShcImJnLXN1Y2Nlc3NcIik7XG4gICAgICAgICAgICBsaUxpc3RbaW5kZXhdLmNoaWxkTm9kZXMuZm9yRWFjaCgoY2hpbGQpID0+IHtcbiAgICAgICAgICAgICAgICBjaGlsZC5jbGFzc0xpc3QucmVtb3ZlKFwiYmctc3VjY2Vzc1wiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRhcmdldC5jbGFzc0xpc3QuYWRkKFwiYmctc3VjY2Vzc1wiKTtcbiAgICB9XG5cbiAgICBwdWJzdWIuc3Vic2NyaWJlKFwiY3JlYXRlTGlcIiwgYmluZExpKTtcbiAgICBmdW5jdGlvbiBiaW5kTGkobGkpIHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcInVsXCIpLmFwcGVuZChsaSk7XG4gICAgfVxuXG4gICAgYS5hcHBlbmQoaW1nLCBzcGFuKTtcblxuICAgIGZvcm1EaXYuYXBwZW5kKGlucHV0KTtcbiAgICBmb3JtUHJvamVjdC5hcHBlbmQoc3VibWl0QnRuKTtcbiAgICBmb3JtUHJvamVjdC5hcHBlbmQoZm9ybURpdik7XG5cbiAgICBmb3JtVGFzay5hcHBlbmQodGFza1N1Ym1pdEJ0biwgdGFza0lucHV0KTtcbiAgICBmb3JtVGFza0Rpdi5hcHBlbmQoZm9ybVRhc2spO1xuXG4gICAgZGl2U2lkZWJhci5hcHBlbmQoYSk7XG4gICAgZGl2U2lkZWJhci5hcHBlbmQoYnRuUHJvamVjdCk7XG4gICAgZGl2U2lkZWJhci5hcHBlbmQoYnRuVGFzayk7XG4gICAgZGl2U2lkZWJhci5hcHBlbmQoZm9ybVByb2plY3QpO1xuICAgIGRpdlNpZGViYXIuYXBwZW5kKGZvcm1UYXNrRGl2KTtcbiAgICBkaXZTaWRlYmFyLmFwcGVuZChocik7XG4gICAgZGl2U2lkZWJhci5hcHBlbmQodWwpO1xuICAgIGRpdlNpZGViYXIuYXBwZW5kKGRpdkRpdmRlKTtcblxuICAgIHJldHVybiB7IGRpdlNpZGViYXIgfTtcbn1cblxuLy8gTWFrZSBhIFNtYWxsIGZvcm0gdW5kZSB0aGUgcHJvamVjdCBHYW1lcGFkQnV0dG9uLCB3aGVuIG5ldyBQcm9qZWN0IGlzIHByZXNzZWRcbi8vIGl0IHNob3dzIHRoZSBsaXR0bGUgZm9ybSBieSBzaG93aW5nIGl0J3MgdmlzYWJsaXR5IGFuZCB3aGVuIHlvdSBwcmVzcyBzdW1iaXQgaXQgY2FsbHMgcHVwc3ViXG4vLyB0aGUgY2FsbHMgYWRkIExJIGZ1bmN0aW9uXG4iXSwibmFtZXMiOlsibGlicyIsInNwbGl0U3RyaW5nIiwic3RyaW5nIiwic3BsaXQiLCJjbGFzc0FkZGVyIiwiZWxlbWVudCIsImFycmF5IiwiZm9yRWFjaCIsImNsYXNzTGlzdCIsImFkZCIsImdldElEIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwic3RyaW5nVG9DbGFzcyIsImdldEZvcm1EYXRhIiwiZXZlbnQiLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwidGFyZ2V0IiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJ0b29nbGVFbGVtZW50IiwiaWQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY29udGFpbnMiLCJyZW1vdmUiLCJwdWJzdWIiLCJldmVudHMiLCJzdWJzY3JpYmUiLCJldk5hbWUiLCJmbiIsImNvbnNvbGUiLCJsb2ciLCJ0aGlzIiwicHVzaCIsInVuc3Vic2NyaWJlIiwiZmlsdGVyIiwiZiIsInB1Ymxpc2giLCJkYXRhIiwidGFza3MiLCJ0YXNrTG9naWMiLCJfdGFza3MiLCJhZGRUYXNrIiwidGFzayIsInJlbW92ZVRhc2siLCJ0YXJnZXRUYXNrIiwidCIsImxpYnNIZWxwZXIiLCJkaXZCb2R5IiwiY3JlYXRlRWxlbWVudCIsImRpdkNvbnRhaW5lciIsImRpdlJvdyIsImRpdkdhcCIsInN0eWxlIiwiYXBwZW5kIiwidGFza09iaiIsInRhc2tDb21wIiwicCIsImJ0bkRvbmUiLCJidG5SZW1vdmUiLCJociIsImlubmVyVGV4dCIsInRhc2tOYW1lIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNyZWF0ZVRhc2tEb20iLCJuZXdUYXNrIiwiX3Rhc2tOYW1lIiwiRGF0ZSIsImdldERhdGUiLCJyZW1vdmVTZWxmIiwiZ2V0TmFtZSIsIlRhc2siLCJjcmVhdGVUYXNrTWVtb3J5IiwiZSIsImNvbnRlbnQiLCJfbmF2IiwibmF2IiwiZGl2IiwiYSIsIl9zaWRlYmFyIiwiZGl2U2lkZWJhciIsImltZyIsInNwYW4iLCJ1bCIsImZvcm1Qcm9qZWN0IiwiZm9ybURpdiIsImZvcm1UYXNrIiwiZm9ybVRhc2tEaXYiLCJ0YXNrU3VibWl0QnRuIiwidGFza0lucHV0IiwiaW5wdXQiLCJzdWJtaXRCdG4iLCJkaXZEaXZkZSIsImJ0blByb2plY3QiLCJidG5UYXNrIiwiaW5wdXRDbGFzcyIsInN1Ym1pdEJ0bkNsYXNzIiwic2V0QXR0cmlidXRlIiwic2lkZWJhck1lbW9yeSIsInByb2plY3RzIiwiYWRkUHJvamVjdCIsImdldExlbmd0aCIsImxlbmd0aCIsInByZXZlbnREZWZhdWx0IiwibmFtZSIsInJlc2V0IiwibmV3UCIsImRhdGVDcmVhdGVkIiwicHJvamVjdCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhbGVydCIsInRleHQiLCJsaSIsImxpTGlzdCIsImNoaWxkTm9kZXMiLCJpbmRleCIsImNoaWxkIiwicmVtb3ZlQXR0cmlidXRlIiwicXVlcnlTZWxlY3RvciIsInNpZGViYXIiXSwic291cmNlUm9vdCI6IiJ9